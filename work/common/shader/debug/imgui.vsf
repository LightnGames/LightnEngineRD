cbuffer vertexBuffer : register(b0){
    float4x4 ProjectionMatrix;
};

struct VS_INPUT {
    float2 pos   : POSITION;
    float4 col   : COLOR0;
    float2 uv    : TEXCOORD0;
	uint channel : CHANNEL;
    float2 color_range : COLORRANGE;
    uint sampler_index : SAMPLER;
};

struct PS_INPUT {
    float4 pos : SV_POSITION;
    float4 col : COLOR0;
    float2 uv  : TEXCOORD0;
	uint channel : CHANNEL;
    float2 color_range : COLORRANGE;
    uint sampler_index : SAMPLER;
};

PS_INPUT main(VS_INPUT input) {
    PS_INPUT output;
    output.pos = mul( ProjectionMatrix, float4(input.pos.xy, 0.f, 1.f));
    output.col = input.col;
    output.uv  = input.uv;
	output.channel = input.channel;
    output.color_range = input.color_range;
    output.sampler_index = input.sampler_index;
    return output;
}