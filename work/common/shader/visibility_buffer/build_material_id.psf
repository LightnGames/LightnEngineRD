#include "../shaderInput.sfh"
#include "../constant_buffer.sfh"
#include "../gpu_driven.sfh"
#include "../util.sfh"

struct Constant
{
    uint2 _resolution;
};

ConstantBuffer<Constant> _constant : register(b0);
Texture2D<uint2> _triangleId : register(t0);
RWStructuredBuffer<uint2> _materialRange : register(u0);

struct PSInput {
    float4 _position : SV_Position;
};

float main(PSInput input) : SV_Depth
{
    uint materialIndex = 0;
    uint dummy = 0;
    uint materialRangeIndex = _constant._resolution.x * input._position.y + input._position.x;
    InterlockedMin(_materialRange[materialRangeIndex].r, materialIndex, dummy);
    InterlockedMax(_materialRange[materialRangeIndex].g, materialIndex, dummy);
    
    float materialIndexUnorm = float(materialIndex) / float(UINT16_MAX);
    return materialIndexUnorm;
}