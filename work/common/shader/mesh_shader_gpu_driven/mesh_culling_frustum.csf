#include "mesh_culling_frustum_template.sfh"

[numthreads(THREAD_NUM, 1, 1)]
void main(in uint3 groupID : SV_GroupID, in uint3 groupThreadID : SV_GroupThreadID) {
    uint meshInstanceIndex = getMeshInstanceIndex(groupID.x, groupThreadID.x);
    if (!isTested(meshInstanceIndex)) {
        return;
    }
    
    MeshInstance meshInstance = _meshInstances[meshInstanceIndex];
    ViewInfo viewInfo = _viewInfo;
    float3 boundsMin = meshInstance._aabbMin;
    float3 boundsMax = meshInstance._aabbMax;
    bool inFrustum = doFrustumCulling(boundsMin, boundsMax, viewInfo);
    if (inFrustum) {
        addIndirectArgument(meshInstanceIndex);
    }
}