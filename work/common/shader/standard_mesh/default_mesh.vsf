#include "../shaderInput.sfh"
#include "../constant_buffer.sfh"
#include "../gpu_driven.sfh"
#include "../util.sfh"

struct VSInput{
    float3 _position : POSITION;
    uint _texcoord : PACKED_TEX0;
};

struct MeshInstanceInfo {
    uint _meshInstanceIndex;
    uint _materialIndex;
};

ConstantBuffer<ViewInfo> _sceneInfo : register(b0);
ConstantBuffer<MeshInstanceInfo> _meshInstanceInfo : register(b1);

StructuredBuffer<float4x3> _meshInstanceWorldMatrics : register(t0);

VertexOut main(VSInput input){
    float4x3 matrixWorld = _meshInstanceWorldMatrics[_meshInstanceInfo._meshInstanceIndex];
    float4 worldPos = float4(mul(float4(input._position, 1), matrixWorld), 1);
    
    VertexOut vertexOut;
    vertexOut._position = mul(worldPos, _sceneInfo._matrixViewProj);
    vertexOut._positionNdc = float4(input._position, 1);
    vertexOut._texcoord = unpackTexCoords(input._texcoord);
    vertexOut._meshletIndex = 0;
    vertexOut._meshInstanceIndex = _meshInstanceInfo._meshInstanceIndex;
    vertexOut._materialIndex = _meshInstanceInfo._materialIndex;
    return vertexOut;
}
