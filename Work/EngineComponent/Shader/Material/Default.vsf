#include "../ViewInfo.sfh"
#include "../MeshRenderer/MeshDef.sfh"
#include "ShaderInput.sfh"

ConstantBuffer<ViewInfo> _viewInfo : register(b0);
ByteAddressBuffer _meshInstances : register(t0);
ByteAddressBuffer _indirectArgumentSubInfos : register(t1);

VertexOut main(VSInput input)
{
    IndirectArgumentSubInfo subInfo = _indirectArgumentSubInfos.Load<IndirectArgumentSubInfo>(sizeof(IndirectArgumentSubInfo) * input._instanceIndex);
    MeshInstance meshInstance = getMeshInstance(_meshInstances, subInfo._meshInstanceIndex);
    float4 worldPos = float4(mul(float4(input._position, 1), meshInstance._worldMatrix), 1);
    //float4 worldPos = float4(input._position, 1);
    
    VertexOut vertexOut;
    vertexOut._position = mul(worldPos, _viewInfo._matrixViewProj);
    vertexOut._meshInstanceIndex = subInfo._meshInstanceIndex;
    vertexOut._materialIndex = subInfo._materialIndex;
    vertexOut._triangleOffset = subInfo._triangleOffset;
    return vertexOut;
}